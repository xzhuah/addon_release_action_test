name: Automatic Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Step 3: Run the release command for each addon
      - name: Run release command for sample_addon
        run: |
          python release.py sample_addon --with_version

      - name: Run release command for addon2 as extension
        run: |
          python release.py addon1 --is_extension --with_version

      - name: Run release command for addon3
        run: |
          python release.py addon3 --is_extension --with_version --with_timestamp

      # Add additional steps for each addon as needed...
      # You can add more steps as needed for each addon.

      # Step 4: List files in addon_release directory
      - name: List files in addon_release directory
        run: |
          echo "Files in addon_release directory:"
          ls ../addon_release

      # Step 5: Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "release-${{ github.run_id }}"
          release_name: "Release ${{ github.run_id }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 6: Upload release assets
      - name: Upload release assets
        run: |
          for file in ../addon_release/*.zip; do
            echo "Uploading $file..."
            gh release upload "release-$file" "$file"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}