name: Automatic Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      addons:
        description: "Comma-separated list of sample_addon values (e.g., addon1,addon2,addon3)"
        required: true
        default: "addon1,addon2,addon3"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Step 3: Debug environment and inputs
      - name: Debug environment and inputs
        run: |
          echo "GITHUB_EVENT: ${{ toJson(github.event) }}"
          echo "GITHUB_EVENT_NAME: ${{ github.event_name }}"
          echo "Received addons input: ${{ inputs.addons }}"

      # Step 4: Run release script for each addon
      - name: Run release script
        run: |
          ADDONS="${{ inputs.addons }}"
          echo "Processing the following addons: $ADDONS"
          if [ -z "$ADDONS" ]; then
            echo "No addons specified. Exiting."
            exit 1
          fi

          mkdir -p addon_release
          IFS=',' read -r -a ADDON_ARRAY <<< "$ADDONS"
          for addon in "${ADDON_ARRAY[@]}"; do
            echo "Processing addon: $addon"
            python release.py "$addon" --with_version
          done

      # Step 5: List files in addon_release directory
      - name: List files in addon_release directory
        run: |
          echo "Files in addon_release directory:"
          ls addon_release

      # Step 6: Create GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "release-${{ github.run_id }}"
          release_name: "Release ${{ github.run_id }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Upload release assets
      - name: Upload release assets
        run: |
          for file in addon_release/*.zip; do
            echo "Uploading $file..."
            gh release upload "release-${{ github.run_id }}" "$file"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}